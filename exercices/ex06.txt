Exercice de Classe Python : Gestion des Employés avec Héritage Multiple et Polymorphisme

Dans cet exercice, vous allez créer une hiérarchie de classes Python pour gérer les informations des employés et leur paie. L'accent sera mis sur l'héritage multiple et le polymorphisme.

Étape 1 : Classe de Base Employé

Créez une classe de base en Python nommée Employé avec les attributs emp_id, emp_name, et emp_department.
Étape 2 : Méthodes de Calcul de Salaire

Implémentez deux méthodes de calcul de salaire dans la classe Employé :
calculate_salary : Cette méthode prend hours_worked en argument et calcule le salaire de l'employé en fonction du nombre d'heures travaillées. Utilisez un taux horaire de 20 $ par heure pour les employés réguliers.
Étape 3 : Classe Manager

Créez une classe nommée Manager qui hérite de Employé. Les managers ont un attribut supplémentaire, bonus, qui est un montant fixe ajouté à leur salaire.
Étape 4 : Calcul de Salaire pour les Managers

Implémentez la méthode calculate_salary pour les managers, qui inclut le montant du bonus.
Étape 5 : Classe Contractor

Créez une classe nommée Contractor qui hérite également de Employé. Les contractuels sont payés à un tarif journalier fixe de 200 $, quelle que soit la durée de travail.
Étape 6 : Calcul de Salaire pour les Contractuels

Implémentez la méthode calculate_salary pour les contractuels.
Étape 7 : Polymorphisme

Démontrez le polymorphisme en créant des instances d'Employé, de Manager, et de Contractor et en calculant leurs salaires à l'aide de la méthode calculate_salary. Montrez que chaque type d'employé calcule son salaire différemment.